plugins {
    id "com.github.hierynomus.license" version "0.14.0"
    id "com.github.harbby.gradle.serviceloader" version "1.1.5"
}

allprojects{
    group 'ideal'
    version '0.1.0-SNAPSHOT'

    apply plugin: 'java'
    apply plugin: 'maven'
    apply plugin: 'checkstyle'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    tasks.withType(ScalaCompile) {
        options.encoding = 'UTF-8'
    }

    ext.deps = [
            flink:  '1.6.0',
            jetty: "9.4.6.v20170531",   //8.1.17.v20150415   "9.4.6.v20170531"
            hadoop: "2.7.4",
            spark: "2.3.1",
            scala: '2.11.8',
            joda_time:'2.9.3',
            log4j12:'1.7.21',
            guice:'4.2.0',
            guava: '25.1-jre',
            jackson: '2.9.5',
            jersey: '2.27'
    ]
}

subprojects{
    if (project != rootProject) {
        apply plugin: 'com.github.hierynomus.license'
    }

    configurations {
        testCompile.extendsFrom compileOnly
    }

    repositories.add(repositories.mavenLocal())
    if(System.getenv('TRAVIS_BUILD_DIR')!=null){
        println("TRAVIS_BUILD..." + System.getenv('TRAVIS_BUILD_DIR'))
    }else {
        println("LOCAL_BUILD... ")
        repositories.add(repositories.maven {url "http://maven.aliyun.com/nexus/content/groups/public/"})
    }
    repositories.add(repositories.mavenCentral())


    dependencies {
        testCompile group: 'junit', name: 'junit', version: '4.12'
    }

    checkstyle {
        toolVersion '8.11'
        showViolations true
    }

    task checkstyle(type: Checkstyle) {
        configFile = file("${rootProject.projectDir}/src/checkstyle/facebook_checks.xml")
        source  'src'
        include  '**/*.java'
        exclude '**/gen/**', '**/test/**', '**/build/**', '**/module-info.java'
        classpath = files()
    }
<<<<<<< HEAD
    // assemble.dependsOn 'checkstyle'
=======
//    assemble.dependsOn 'checkstyle'
>>>>>>> upstream/master

    /* 如果依赖版本冲突 则直接失败策略设置*/
    configurations.all {
        resolutionStrategy {  failOnVersionConflict() }
    }
    // ./gradlew sylph-runners:sylph-runner-flink:dependencies

    license {
        headerDefinitions {  //see: http://code.mycila.com/license-maven-plugin/#supported-comment-types
            javadoc_style {
                firstLine = "/*"
                endLine   = " */"
                beforeEachLine = " * "
                afterEachLine = ""
                firstLineDetectionPattern = "(\\s|\\t)*/\\*.*\$"
                lastLineDetectionPattern  = ".*\\*/(\\s|\\t)*\$"
                allowBlankLines = false
                padLines = false
                //skipLine = "//"
                isMultiline = true
            }
        }
        header rootProject.file('src/license/LICENSE-HEADER.txt')
        strictCheck true
        excludes(["**/*.properties","**/*.sql"])
        //include "**/*.java"
    }
    assemble.dependsOn 'licenseMain','licenseTest'
    //licenseMain.includes
    //license.mapping('javascript', 'JAVADOC_STYLE')
}
